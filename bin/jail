#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'jailman'
require 'terminal-table'

class Jail < Thor

  desc "new [name] [directory]", "Creates a new Jail for application [name] [directory]"

  def new(name, directory)
    $stdout.puts "[JAILMAN] Creating Jail #{name}"
    jail = Jailman::Jail.new(name, directory)
    jail.create
    $stdout.puts "[JAILMAN] #{name} created"
  end

  desc "runner [name] [command]", "Run a [command] inside a Jail [name]"
  def runner(name, command)
    $stdout.puts "[JAILMAN] Running : #{command}"
    jail = Jailman::Jail.new(name)
    $stdout.puts jail.run(command)
  end

  desc "status [name] ", "Retrieve a Jail Status"
  def status(name)

    $stdout.puts "[JAILMAN] Status for Container : #{name}"
    jail = Jailman::Jail.find(name)
    $stdout.puts "[JAILMAN] Container [#{name}] not Found" unless jail

    rows = []
    rows << ["PID", "NAME", "DIRECTORY", "STATUS"]
    rows << [jail.pid, jail.name, jail.directory, jail.status]
    table = Terminal::Table.new :rows => rows
    $stdout.puts table
  end

  desc "destroy [name]", "Destroy a container"
  def destroy(name)
    $stdout.puts "[JAILMAN] Destroy Container : #{name}"
    jail = Jailman::Jail.find(name)
    $stdout.puts "[JAILMAN] Container [#{name}] not Found" unless jail
    jail.destroy
    $stdout.puts "[JAILMAN] #{name} destroyed"
  end

  desc "list", "List Active Containers"
  def list
    $stdout.puts Jailman::Jail.list
  end

end

Jail.start(ARGV)
